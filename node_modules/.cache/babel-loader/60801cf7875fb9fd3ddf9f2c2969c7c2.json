{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pflei\\\\Documents\\\\Projects\\\\Udemy\\\\React\\\\User\\\\src\\\\components\\\\Users\\\\AddUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment, useRef } from \"react\";\nimport Card from \"../UI/Card\";\nimport classes from \"./AddUser.module.css\";\nimport Button from \"../UI/Button\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddUser = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const passwordInputRef = useRef(); //const [enteredUsername, setEnteredUsername] = useState(\"\");\n  // [enteredPassword, setEnteredPassword] = useState(\"\");\n\n  const [error, setError] = useState();\n\n  const addUserHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredUserPassword = passwordInputRef.current.value;\n\n    if (enteredName.trim().length === 0 || enteredUserPassword.trim().length === 0) {\n      setError({\n        title: \"Invalid Input\",\n        message: \"Username and Password cannot be blank\"\n      });\n      return;\n    }\n\n    if (enteredUserPassword.trim().length < 6) {\n      setError({\n        title: \"Invalid Password\",\n        message: \"Password must be at least 6 characters\"\n      });\n      return;\n    }\n\n    props.onAddUser(enteredName, enteredUserPassword);\n    nameInputRef.current.value = '';\n    passwordInputRef.current.value = '';\n  };\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      title: error.title,\n      message: error.message,\n      onConfirm: errorHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.input,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addUserHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          type: \"text\",\n          ref: nameInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"password\",\n          type: \"text\",\n          ref: passwordInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddUser, \"HWG2ptoVKLqPJCJ+X8qbMz0Pma8=\");\n\n_c = AddUser;\nexport default AddUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"names":["React","useState","Fragment","useRef","Card","classes","Button","ErrorModal","AddUser","props","nameInputRef","passwordInputRef","error","setError","addUserHandler","event","preventDefault","enteredName","current","value","enteredUserPassword","trim","length","title","message","onAddUser","errorHandler","input"],"sources":["C:/Users/pflei/Documents/Projects/Udemy/React/User/src/components/Users/AddUser.js"],"sourcesContent":["import React, { useState, Fragment, useRef } from \"react\";\r\n\r\nimport Card from \"../UI/Card\";\r\nimport classes from \"./AddUser.module.css\";\r\nimport Button from \"../UI/Button\";\r\nimport ErrorModal from \"../UI/ErrorModal\";\r\n\r\nconst AddUser = (props) => {\r\n  const nameInputRef = useRef();\r\n  const passwordInputRef = useRef();\r\n\r\n  //const [enteredUsername, setEnteredUsername] = useState(\"\");\r\n  // [enteredPassword, setEnteredPassword] = useState(\"\");\r\n  const [error, setError] = useState();\r\n\r\n  const addUserHandler = (event) => {\r\n    event.preventDefault();\r\n    const enteredName = nameInputRef.current.value;\r\n    const enteredUserPassword = passwordInputRef.current.value;\r\n\r\n    if (\r\n      enteredName.trim().length === 0 ||\r\n      enteredUserPassword.trim().length === 0\r\n    ) {\r\n      setError({\r\n        title: \"Invalid Input\",\r\n        message: \"Username and Password cannot be blank\",\r\n      });\r\n      return;\r\n    }\r\n    if (enteredUserPassword.trim().length < 6) {\r\n      setError({\r\n        title: \"Invalid Password\",\r\n        message: \"Password must be at least 6 characters\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    props.onAddUser(enteredName, enteredUserPassword);\r\n\r\n    nameInputRef.current.value = '';\r\n    passwordInputRef.current.value = '';\r\n  };\r\n\r\n  const errorHandler = () => {\r\n    setError(null);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {error && (\r\n        <ErrorModal\r\n          title={error.title}\r\n          message={error.message}\r\n          onConfirm={errorHandler}\r\n        />\r\n      )}\r\n\r\n      <Card className={classes.input}>\r\n        <form onSubmit={addUserHandler}>\r\n          <label htmlFor=\"username\">Username</label>\r\n          <input id=\"username\" type=\"text\" ref={nameInputRef} />\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input id=\"password\" type=\"text\" ref={passwordInputRef} />\r\n          <Button type=\"submit\">Add User</Button>\r\n        </form>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AddUser;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,MAApC,QAAkD,OAAlD;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;EAAA;;EACzB,MAAMC,YAAY,GAAGP,MAAM,EAA3B;EACA,MAAMQ,gBAAgB,GAAGR,MAAM,EAA/B,CAFyB,CAIzB;EACA;;EACA,MAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,EAAlC;;EAEA,MAAMa,cAAc,GAAIC,KAAD,IAAW;IAChCA,KAAK,CAACC,cAAN;IACA,MAAMC,WAAW,GAAGP,YAAY,CAACQ,OAAb,CAAqBC,KAAzC;IACA,MAAMC,mBAAmB,GAAGT,gBAAgB,CAACO,OAAjB,CAAyBC,KAArD;;IAEA,IACEF,WAAW,CAACI,IAAZ,GAAmBC,MAAnB,KAA8B,CAA9B,IACAF,mBAAmB,CAACC,IAApB,GAA2BC,MAA3B,KAAsC,CAFxC,EAGE;MACAT,QAAQ,CAAC;QACPU,KAAK,EAAE,eADA;QAEPC,OAAO,EAAE;MAFF,CAAD,CAAR;MAIA;IACD;;IACD,IAAIJ,mBAAmB,CAACC,IAApB,GAA2BC,MAA3B,GAAoC,CAAxC,EAA2C;MACzCT,QAAQ,CAAC;QACPU,KAAK,EAAE,kBADA;QAEPC,OAAO,EAAE;MAFF,CAAD,CAAR;MAIA;IACD;;IAEDf,KAAK,CAACgB,SAAN,CAAgBR,WAAhB,EAA6BG,mBAA7B;IAEAV,YAAY,CAACQ,OAAb,CAAqBC,KAArB,GAA6B,EAA7B;IACAR,gBAAgB,CAACO,OAAjB,CAAyBC,KAAzB,GAAiC,EAAjC;EACD,CA3BD;;EA6BA,MAAMO,YAAY,GAAG,MAAM;IACzBb,QAAQ,CAAC,IAAD,CAAR;EACD,CAFD;;EAIA,oBACE,QAAC,QAAD;IAAA,WACGD,KAAK,iBACJ,QAAC,UAAD;MACE,KAAK,EAAEA,KAAK,CAACW,KADf;MAEE,OAAO,EAAEX,KAAK,CAACY,OAFjB;MAGE,SAAS,EAAEE;IAHb;MAAA;MAAA;MAAA;IAAA,QAFJ,eASE,QAAC,IAAD;MAAM,SAAS,EAAErB,OAAO,CAACsB,KAAzB;MAAA,uBACE;QAAM,QAAQ,EAAEb,cAAhB;QAAA,wBACE;UAAO,OAAO,EAAC,UAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAO,EAAE,EAAC,UAAV;UAAqB,IAAI,EAAC,MAA1B;UAAiC,GAAG,EAAEJ;QAAtC;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE;UAAO,OAAO,EAAC,UAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHF,eAIE;UAAO,EAAE,EAAC,UAAV;UAAqB,IAAI,EAAC,MAA1B;UAAiC,GAAG,EAAEC;QAAtC;UAAA;UAAA;UAAA;QAAA,QAJF,eAKE,QAAC,MAAD;UAAQ,IAAI,EAAC,QAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QALF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QATF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD,CA9DD;;GAAMH,O;;KAAAA,O;AAgEN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}